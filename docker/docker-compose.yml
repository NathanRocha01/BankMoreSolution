version: '3.9'

services:

  conta-corrente-api:
    build:
      context: ../src
      dockerfile: ContaCorrente.API/Dockerfile
    container_name: conta-corrente-api
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Data Source=/data/contacorrente.db
    volumes:
      - ./data:/data
    depends_on:
      - sqlite-init
    networks:
      - kafka-net

  transferencia-api:
    build:
      context: ../src
      dockerfile: Transferencia.API/Dockerfile
    container_name: transferencia-api
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Data Source=/data/transferencia.db
    volumes:
      - ./data:/data
    depends_on:
      - sqlite-init
    networks:
      - kafka-net

  tarifa-worker:
    build:
      context: ../src
      dockerfile: Tarifa.Worker/Dockerfile
    container_name: tarifa-worker
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Data Source=/data/tarifas.db
    volumes:
      - ./data:/data
    depends_on:
      - kafka
      - sqlite-init
    networks:
      - kafka-net

  redis:
    image: redis:7
    ports:
        - "6379:6379"
    networks:
      - kafka-net

  sqlite-init:
    image: nouchka/sqlite3
    container_name: sqlite-init
    volumes:
      - ./data:/data
    working_dir: /data
    entrypoint: >
      /bin/sh -c "
        if [ ! -f /data/contacorrente.db ]; then
          sqlite3 /data/contacorrente.db < /data/contacorrente.sql;
        fi &&
        if [ ! -f /data/transferencia.db ]; then
          sqlite3 /data/transferencia.db < /data/transferencia.sql;
        fi &&
        if [ ! -f /data/tarifas.db ]; then
          sqlite3 /data/tarifas.db < /data/tarifas.sql;
        fi &&
        tail -f /dev/null"
    networks:
      - kafka-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge